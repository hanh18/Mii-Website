// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  name        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  email       String   @unique
  fullName    String?
  gender      String?
  birthday    String?
  address     String?
  phone       String?
  avatar      String?
  validToken  String?
  isActive    Boolean  @default(false)
  isBlock     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  order       Order[]
  cart        Cart?
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   
  price       Int
  amout       Decimal
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  productImg  ProductImage[]
  categoryProduct CategoryProduct[]
  orderProduct  OrderProduct[]
  cartProduct   CartProduct[]
}

model ProductImage {
  @@map("product_image")
  id          Int      @id @default(autoincrement())
  link        String   
  isDefault   Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int 
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   
  thumbnail   String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  categoryProduct CategoryProduct[]
}

model CategoryProduct {
  @@map("category_product")
  id          Int      @id @default(autoincrement())
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id            Int      @id @default(autoincrement())
  paymentMethod String   
  paymentDate   Int
  status        Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  orderProduct  OrderProduct[]
}

model OrderProduct {
  @@map("order_profuct")
  id            Int      @id @default(autoincrement())
  quantity      String   
  price         Decimal
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  order         Order    @relation(fields: [orderId], references: [id])
  orderId       Int
  product       Product  @relation(fields: [productId], references: [id])
  productId     Int
}

model Cart {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
  userId        Int      @unique
  cartProduct   CartProduct[]
}

model CartProduct {
  @@map("cart_product")
  id            Int      @id @default(autoincrement())
  quantity      Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  cart          Cart     @relation(fields: [cartId], references: [id])
  cartId        Int
  product       Product  @relation(fields: [productId], references: [id])
  productId     Int
}
